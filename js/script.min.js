let globalResetBackground, linkMenu, userSettings, monthNames = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
    dayNames = ["SUNDAY", "MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY"],
    CookiePrefix = "weboasis_",
    cmdPrefix = "!",
    ssi = 0,
    color = "#aaeb8d",
    canvasBg = "matrix",
    searchSources = [
        ["x", "https://searx.tiekoetter.com/?q={Q}", "SearX"],
        ["d", "https://duckduckgo.com/?q={Q}", "DuckDuckGo"],
        ["b", "https://search.brave.com/search?q={Q}", "Brave"],
        ["y", "https://yandex.com/search/?text={Q}", "Yandex"],
        ["s", "https://www.startpage.com/do/search?query={Q}", "StartPage (Google)"],
        ["p", "https://engine.presearch.org/search?q={Q}", "Presearch"],
        ["m", "https://www.mojeek.com/search?q={Q}", "Mojeek"],
        ["e", "https://metager.org/meta/meta.ger3?eingabe={Q}", "Metager"],
        ["q", "https://www.qwant.com/?q={Q}&t=web", "Qwant"],
        ["w", "https://www.wolframalpha.com/input/?i={Q}", "Wolfram"],
        ["f", "https://boardreader.com/s/{Q}.html", "Forums"],
        ["u", "https://yewtu.be/search?q={Q}", "YouTube"],
        ["t", "https://bitsearch.to/search?q={Q}", "Torrents"],
        ["a", "https://alternativeto.net/browse/search?q={Q}", "Alternative"],
        ["o", "https://ahmia.fi/search/?q={Q}", "Onion/TOR"]
    ],
    lockNav = !1,
    svgReddit = "<svg style=\"width:24px;height:24px\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M24 11.779c0-1.459-1.192-2.645-2.657-2.645-.715 0-1.363.286-1.84.746-1.81-1.191-4.259-1.949-6.971-2.046l1.483-4.669 4.016.941-.006.058c0 1.193.975 2.163 2.174 2.163 1.198 0 2.172-.97 2.172-2.163s-.975-2.164-2.172-2.164c-.92 0-1.704.574-2.021 1.379l-4.329-1.015c-.189-.046-.381.063-.44.249l-1.654 5.207c-2.838.034-5.409.798-7.3 2.025-.474-.438-1.103-.712-1.799-.712-1.465 0-2.656 1.187-2.656 2.646 0 .97.533 1.811 1.317 2.271-.052.282-.086.567-.086.857 0 3.911 4.808 7.093 10.719 7.093s10.72-3.182 10.72-7.093c0-.274-.029-.544-.075-.81.832-.447 1.405-1.312 1.405-2.318zm-17.224 1.816c0-.868.71-1.575 1.582-1.575.872 0 1.581.707 1.581 1.575s-.709 1.574-1.581 1.574-1.582-.706-1.582-1.574zm9.061 4.669c-.797.793-2.048 1.179-3.824 1.179l-.013-.003-.013.003c-1.777 0-3.028-.386-3.824-1.179-.145-.144-.145-.379 0-.523.145-.145.381-.145.526 0 .65.647 1.729.961 3.298.961l.013.003.013-.003c1.569 0 2.648-.315 3.298-.962.145-.145.381-.144.526 0 .145.145.145.379 0 .524zm-.189-3.095c-.872 0-1.581-.706-1.581-1.574 0-.868.709-1.575 1.581-1.575s1.581.707 1.581 1.575-.709 1.574-1.581 1.574z\"/></svg>",
    svgCode = "<svg style=\"width:24px;height:24px\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M24 10.935v2.131l-8 3.947v-2.23l5.64-2.783-5.64-2.79v-2.223l8 3.948zm-16 3.848l-5.64-2.783 5.64-2.79v-2.223l-8 3.948v2.131l8 3.947v-2.23zm7.047-10.783h-2.078l-4.011 16h2.073l4.016-16z\" /></svg>",
    svgNews = "<svg style=\"width:24px;height:24px\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M21 9.662c-2.287.194-5.197 1.038-7 1.794v-1.064c1.933-.721 4.598-1.54 7-1.745v1.015zm0 2.031c-2.287.194-5.197 1.038-7 1.794v-1.064c1.933-.721 4.598-1.54 7-1.745v1.015zm0 2.031c-2.287.194-5.197 1.038-7 1.794v-1.064c1.933-.721 4.598-1.54 7-1.745v1.015zm0 2.031c-2.287.194-5.197 1.038-7 1.794v-1.064c1.933-.721 4.598-1.54 7-1.745v1.015zm0-9.951c-2.402.204-5.068 1.024-7 1.745v1.933c1.804-.756 4.713-1.6 7-1.794v-1.884zm-18 2.843c2.402.205 5.067 1.024 7 1.745v1.064c-1.803-.756-4.713-1.6-7-1.794v-1.015zm0 2.031c2.402.205 5.067 1.024 7 1.745v1.064c-1.803-.756-4.713-1.6-7-1.794v-1.015zm0 2.031c2.402.205 5.067 1.024 7 1.745v1.064c-1.803-.756-4.713-1.6-7-1.794v-1.015zm0 2.032c2.402.205 5.067 1.024 7 1.745v1.064c-1.803-.756-4.713-1.6-7-1.794v-1.015zm0-7.054c2.287.194 5.196 1.038 7 1.794v-1.933c-1.932-.72-4.598-1.54-7-1.744v1.883zm9-2.724c-3.063-1.671-7.776-2.755-12-2.963v17c4.289.206 8.195 1.249 12 3 3.805-1.751 7.711-2.794 12-3v-17c-4.224.208-8.937 1.292-12 2.963zm-10-.791c4.264.496 6.86 1.467 9 2.545v12.702c-2.968-1.184-5.939-1.95-9-2.271v-12.976zm20 12.975c-3.061.321-6.032 1.088-9 2.271v-12.701c2.187-1.103 4.757-2.051 9-2.544v12.974z\" /></svg>",
    svgMore = "<svg style=\"width:24px;height:24px\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M16 6h-8v-6h8v6zm-10 12h-6v6h6v-6zm18 0h-6v6h6v-6zm-11-7v-3h-2v3h-9v5h2v-3h7v3h2v-3h7v3h2v-5h-9zm2 7h-6v6h6v-6z\" /></svg>",
    svgSocial = "<svg style=\"width:24px;height:24px\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M18,16.08C17.24,16.08 16.56,16.38 16.04,16.85L8.91,12.7C8.96,12.47 9,12.24 9,12C9,11.76 8.96,11.53 8.91,11.3L15.96,7.19C16.5,7.69 17.21,8 18,8A3,3 0 0,0 21,5A3,3 0 0,0 18,2A3,3 0 0,0 15,5C15,5.24 15.04,5.47 15.09,5.7L8.04,9.81C7.5,9.31 6.79,9 6,9A3,3 0 0,0 3,12A3,3 0 0,0 6,15C6.79,15 7.5,14.69 8.04,14.19L15.16,18.34C15.11,18.55 15.08,18.77 15.08,19C15.08,20.61 16.39,21.91 18,21.91C19.61,21.91 20.92,20.61 20.92,19A2.92,2.92 0 0,0 18,16.08Z\" /></svg>",
    svgDownloads = "<svg style=\"width:24px;height:24px\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M23.984 11h-2.006c-.057-.557-.143-1.104-.287-1.631l1.82-.862c.245.799.401 1.632.473 2.493zm-3.035-3.493l1.81-.857c-.353-.7-.758-1.368-1.236-1.981l-1.512 1.318c.36.474.667.986.938 1.52zm.039 8.939c-.26.519-.562 1.01-.904 1.473l1.539 1.29c.465-.616.871-1.276 1.211-1.976l-1.846-.787zm-.836-13.238c-.589-.54-1.214-1.038-1.9-1.454l-1.216 1.599c.577.334 1.104.739 1.602 1.177l1.514-1.322zm-1.414 16.195c-1.779 1.608-4.129 2.597-6.713 2.597-5.525 0-10.021-4.486-10.021-10 0-3.692 2.021-6.915 5.011-8.647l-1.215-1.599c-3.473 2.103-5.8 5.897-5.8 10.246 0 6.627 5.385 12 12.025 12 3.204 0 6.107-1.259 8.264-3.297l-1.551-1.3zm3.258-6.403c-.054.54-.162 1.063-.299 1.574l1.864.795c.224-.762.372-1.553.439-2.369h-2.004zm-9.996 5l7-8h-4v-10h-6v10h-4l7 8z\" /></svg>",
    svgStream = "<svg style=\"width:24px;height:24px\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M19 12c-.341 0-.673-.033-1-.08v1.08h-2v-1.683c-.749-.356-1.427-.837-2-1.422v3.105h-8v-6h6.294c-.19-.634-.294-1.305-.294-2h-12v19h20v-12.08c-.327.047-.659.08-1 .08zm-15 10h-2v-2h2v2zm0-4h-2v-2h2v2zm0-5h-2v-2h2v2zm0-4h-2v-2h2v2zm10 13h-8v-6h8v6zm4 0h-2v-2h2v2zm0-4h-2v-2h2v2zm-3.711-14.667c.688-1.941 2.534-3.333 4.711-3.333 2.762 0 5 2.239 5 5 0 .285-.029.562-.074.833h-.635c-.474 0-.55-.211-.806-1.025-.186-.589-.493-1.479-1.171-1.479-.689 0-.957.923-1.205 1.669-.137.405-.217.65-.339.65-.116 0-.171-.245-.308-.65-.258-.759-.551-1.669-1.235-1.669-.711 0-1.016.995-1.22 1.628-.147.46-.194.691-.324.691-.111 0-.146-.187-.275-.56-.293-.85-.386-1.755-1.691-1.755h-.428zm8.941 3.334c-.957 0-1.185-.459-1.543-1.485-.221-.636-.245-.864-.373-.864-.126 0-.161.262-.408.964-.216.615-.514 1.379-1.136 1.379-.693 0-.987-.927-1.243-1.698-.142-.427-.177-.622-.3-.622-.115 0-.146.175-.291.598-.265.781-.559 1.722-1.253 1.722-.687 0-1-.926-1.171-1.479-.252-.818-.297-1.014-.755-1.014h-.684c-.044.27-.073.547-.073.832 0 2.761 2.238 5 5 5 2.177 0 4.022-1.392 4.709-3.333h-.479z\" /></svg>",
    svgCloud = "<svg style=\"width:24px;height:24px\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M24 21v-6h-18v6h18zm-3-4c.553 0 1 .448 1 1s-.447 1-1 1c-.552 0-1-.448-1-1s.448-1 1-1zm-7.806 0h1.275l-.864 2h-1.274l.863-2zm-2.141 0h1.275l-.863 2h-1.275l.863-2zm-2.19 0h1.275l-.863 2h-1.275l.863-2zm-4.863.941c-2.253-.29-4-2.194-4-4.524 0-2.252 1.626-4.121 3.767-4.506.177-3.294 2.895-5.911 6.233-5.911s6.056 2.617 6.233 5.911c2.005.361 3.541 2.029 3.729 4.089h-1.991c-.279-2.105-2.674-2.333-3.65-2.401.117-1.958-.555-5.599-4.321-5.599-4.438 0-4.359 4.75-4.321 5.599-.945-.037-3.679.341-3.679 2.818 0 1.223.856 2.245 2 2.511v2.013z\" /></svg>",
    linkMenuOrder = ["Downloads", "Stream", "Social", "Reddit", "Code", "News", "Cloud", "More"],
    defaultLinkMenu = {
        Downloads: [
            [svgDownloads, "blue", "-HEAD-"],
        ],
        Stream: [
            [svgStream, "purple", "-HEAD-"],
        ],
        Social: [
            [svgSocial, "green", "-HEAD-"],
        ],
        Reddit: [
        ],
        Code: [
            [svgCode, "red", "-HEAD-"],
        ],
        News: [
            [svgNews, "orange", "-HEAD-"],
        ],
        Cloud: [
            [svgCloud, "yellow", "-HEAD-"],
        ],
        More: [
            [svgMore, "pink", "-HEAD-"],
        ]
    },
    hiddenLinksOne = [
        ["r/FMHY's wiki", "https://reddit.rtrace.io/r/FREEMEDIAHECKYEAH/wiki/index"],
        ["Nako's Diary", "home/"]
    ],
    hiddenLinksTwo = [
        ["r/FMHY's nsfw", "https://github.com/nbats/FMHYedit/blob/main/NSFWPiracy.md"],
        ["ThePornDude", "https://theporndude.com/"],
    ],
    searchInput = document.getElementById("searchBar"),
    searchLinksInput = document.getElementById("searchLinks"),
    rootSearchHelp = document.getElementById("searchHelpMenu"),
    rootSearchLinkHelp = document.getElementById("searchLinkMenu"),
    rootMenuUL = document.getElementById("categoryMenu"),
    dateDiv = document.getElementById("dateContainer"),
    systemInfoDiv = document.getElementById("systemInfoContainer"),
    notesTextarea = document.getElementById("notesInput"),
    showHideItemIcons = document.getElementById("customization-checkbox"),
    openInNewTab = document.getElementById("openNewTab-checkbox"),
    searchSuggestions = document.getElementById("searchsuggestions-checkbox"),
    oldRedditLinks = document.getElementById("oldReddit-checkbox"),
    confirmModal = document.getElementById("confirmModal"),
    secretMenuOne = document.getElementById("secretMenu"),
    secretMenuTwo = document.getElementById("secretMenu"),
    overlay = document.getElementById("overlay"),
    closeOptions = document.getElementsByClassName("modal-cancel");

function init() {
    initSearchBar(), initSearchLinks(), buildDate(), buildSystemInfo(), buildHelp(), buildHelp2(), buildMenu(), document.body.style.opacity = 1, document.getElementById("mainContainer").style.opacity = 1, document.getElementById("infoContainer").style.opacity = 1, document.getElementById("notesWidget").style.opacity = 1;
    new PerfectScrollbar("#mySidenav");
    document.getElementById("menu-select").addEventListener("mouseenter", function() {
        lockNav = !0
    }), document.getElementById("menu-select").addEventListener("mouseleave", function(t) {
        null === t.relatedTarget || (lockNav = !1)
    }), document.querySelector("#resetToDefault .btn").addEventListener("click", resetAllToDefault), document.getElementById("resetColor").addEventListener("click", function() {
        color = "#0C85D3", document.getElementById("colorPicker").jscolor.fromString(color), SetCookie("matrix-color", color, 31536000000)
    }), showHideItemIcons.onchange = toggleHideIcons, localStorage.getItem("hide-icons") && "no" === localStorage.getItem("hide-icons") ? (showHideItemIcons.checked && (showHideItemIcons.checked = !1), toggleHideIcons()) : (showHideItemIcons.checked = !0, toggleHideIcons()), openInNewTab.onchange = toggleOpenNewTab, "true" === GetCookie("new-tab") && (openInNewTab.checked = !0), oldRedditLinks.onchange = toggleOldReddit, localStorage.getItem("old-reddit") && "no" === localStorage.getItem("old-reddit") ? (oldRedditLinks.checked && (oldRedditLinks.checked = !1), toggleOldReddit()) : (oldRedditLinks.checked = !0, toggleOldReddit()), searchSuggestions.onchange = toogleSearchSuggestions, localStorage.getItem("search-suggestions") && "no" === localStorage.getItem("search-suggestions") ? (searchSuggestions.checked && (searchSuggestions.checked = !1), toogleSearchSuggestions()) : (searchSuggestions.checked = !0, toogleSearchSuggestions()), null != GetCookie("matrix-color") && (color = GetCookie("matrix-color"), jscolor.installByClassName("jscolor"), document.getElementById("colorPicker").jscolor.fromString(color)), null != GetCookie("animation") && (clearOldCanvas(), canvasBg = GetCookie("animation"), setAnimation(GetCookie("animation"))), localStorage.getItem("background_id") && (document.getElementById("resetBackgroundBtn").style.display = "inline-block")
}
Array.from(closeOptions).forEach(function(t) {
    t.addEventListener("click", function() {
        confirmModal.style.display = "none", secretMenu.style.display = "none", overlay.style.display = "none"
    })
});

function initSearchBar() {
    if (searchSources[ssi] !== void 0) {
        let t = GetCookie("engine") || "";
        "" === t ? searchInput.placeholder = searchSources[ssi][2] : (searchInput.placeholder = searchSources[t][2], ssi = t)
    } else ssi = 0, searchInput.placeholder = "Do you know what you're doing?", alert("Error: default search engine setting is invalid!");
    document.addEventListener("keydown", switcheroo), document.addEventListener("keyup", switcheroo), searchInput.value = ""
}

function initSearchLinks(t) {
    if (!t) {
        let t = [];
        for (const e in defaultLinkMenu)
            for (j = 0; j < defaultLinkMenu[e].length; j++) "-HEAD-" != defaultLinkMenu[e][j][2] && t.push(defaultLinkMenu[e][j]);
        for (j = 0; j < hiddenLinksOne.length; j++) hiddenLinksOne[j][2] = "", t.push(hiddenLinksOne[j]);
        for (j = 0; j < hiddenLinksTwo.length; j++) hiddenLinksTwo[j][2] = "", t.push(hiddenLinksTwo[j]);
        searchLinksInput.placeholder = "Search Deafalt Links"
    } else allLinkSources = [...t];
    searchLinksInput.placeholder = "Search Deafalt Links"
}

function buildDate() {
    let t = new Date,
        e = 12 < t.getHours() ? t.getHours() - 12 : t.getHours(),
        s = 12 <= t.getHours() ? "PM" : "AM";
    e = 10 > e ? "0" + e : e, 1 > e && (e = 12);
    let o = 10 > t.getMinutes() ? "0" + t.getMinutes() : t.getMinutes(),
        i = 10 > t.getSeconds() ? "0" + t.getSeconds() : t.getSeconds(),
        r = e + ":" + o + ":" + i + " " + s;
    dateDiv.innerHTML = "<font class=\"font-2em\">" + dayNames[t.getDay()] + " " + monthNames[t.getMonth()] + " " + t.getDate() + ", " + t.getFullYear() + "<br>" + r + "</font>", setTimeout(buildDate, 1e3)
}

function buildSystemInfo() {
    const t = window.devicePixelRatio,
        e = Math.round(window.screen.width * t),
        s = Math.round(window.screen.height * t);
    let o = "<a href=\"https://amiunique.org/fp\"  target=\"_blank\"> " + platform.os + "</a><br><a href=\"https://amiunique.org/fp\"  target=\"_blank\"> " + platform.name + " " + platform.version + "</a><br><a href=\"https://amiunique.org/fp\"  target=\"_blank\"> " + e + " x " + s + "</a>",
        i = window.navigator.hardwareConcurrency,
        r = parseInt(i),
        a = "<span id=\"ip\" onclick=\"toggleShowIP()\">Show IP</span>";
    systemInfoDiv.innerHTML = 0 < r ? o + "<br><a href=\"https://amiunique.org/fp\"  target=\"_blank\"> " + (r + " Threads") + "</a><br>" + a : o + "<br>" + a
}

function buildHelp() {
    if ("yes" === localStorage.getItem("search-suggestions") && "" !== searchInput.value) {
        if (document.getElementById("generatedList")) {
            var t = document.getElementById("generatedList");
            t.parentNode.removeChild(t)
        }
        var e = document.createElement("div");
        e.id = "generatedList";
        for (let t = 0; t < AutoComp.length && 10 > t; t++) {
            var s = document.createElement("div");
            s.innerHTML = AutoComp[t], s.classList.add("searchSources"), s.classList.add("list-item-animation"), s.classList.add("transition"), s.id = t, s.addEventListener("click", t => {
                searchInput.value = t.target.innerText, searchInput.focus()
            }), e.appendChild(s)
        }
        rootSearchHelp.appendChild(e)
    } else {
        let r = GetCookie("engine") ? parseInt(GetCookie("engine")) : "";
        if (document.getElementById("generatedList")) {
            var t = document.getElementById("generatedList");
            t.parentNode.removeChild(t)
        }
        var e = document.createElement("div");
        e.id = "generatedList";
        for (let t = 0; t < searchSources.length; t++) {
            var s = document.createElement("div");
            s.innerHTML = `<span
              		${r==t?"class=\"selected\"":""} >` + "!" + searchSources[t][0] + "</span>" + searchSources[t][2], s.classList.add("searchSources"), s.classList.add("list-item-animation"), s.classList.add("transition"), s.id = t, e.appendChild(s)
        }
        rootSearchHelp.appendChild(e);
        var o = document.querySelectorAll(".searchSources");
        Array.from(o).forEach(function(t) {
            t.addEventListener("click", function(t) {
                var e = t.target.id;
                ssi = e, searchInput.placeholder = t.target.textContent.substring(2), SetCookie("engine", e, 31536000000), buildHelp()
            })
        })
    }
}

function buildHelp2() {
    rootSearchLinkHelp.innerHTML = "";
    for (let e = 0; 10 > e & e < allLinkSources.length; e++) {
        var t = document.createElement("div");
        t.innerHTML = `<span><a target="_blank" href=${allLinkSources[e][1]}>${allLinkSources[e][0]}</a></span>`, t.classList.add("searchSources"), t.classList.add("list-item-animation"), t.classList.add("transition"), rootSearchLinkHelp.append(t)
    }
}

function handleSearchBarFocus() {
    addClass("mainContainer", "input-active");
    let t = document.querySelectorAll(".searchSources"),
        e = t[t.length - 1],
        s = parseInt(1e3 * parseFloat(e.style.transitionDelay.replace("s", "")));
    setTimeout(() => {
        t = document.querySelectorAll("#generatedList .searchSources"), t.forEach(t => {
            t.classList.add("no-delay")
        })
    }, s), closeCustomLinksNav && closeCustomLinksNav()
}

function handleSearchLinksFocus() {
    document.getElementById("mainContainer").style.display = "none", addClass("mainContainer2", "input-active");
    let t = document.querySelectorAll("#mainContainer2>#searchLinkHelp>#searchLinkMenu>.searchSources"),
        e = t[t.length - 1],
        s = parseInt(1e3 * parseFloat(e.style.transitionDelay.replace("s", "")));
    setTimeout(() => {
        t = document.querySelectorAll("#mainContainer2.input-active>#searchLinkHelp>#searchLinkMenu>p"), t.forEach(t => {
            t.classList.add("no-delay")
        })
    }, s), closeCustomLinksNav && closeCustomLinksNav()
}

function handleSearchBarBlur() {
    removeClass("mainContainer", "input-active");
    let t = document.querySelectorAll("#mainContainer>#searchHelp>#searchHelpMenu>li");
    t.forEach(t => {
        t.classList.contains("no-delay") && t.classList.remove("no-delay"), t.classList.remove("transition"), document.getElementById(t.id).offsetWidth = document.getElementById(t.id).offsetWidth, t.classList.add("transition")
    })
}

function handleSearchLinksBlur() {
    document.getElementById("mainContainer").style.display = "block", removeClass("mainContainer2", "input-active");
    let t = document.querySelectorAll("#mainContainer2>#searchHelp>#searchHelpMenu>li");
    t.forEach(t => {
        t.classList.contains("no-delay") && t.classList.remove("no-delay"), t.classList.remove("transition"), document.getElementById(t.id).offsetWidth = document.getElementById(t.id).offsetWidth, t.classList.add("transition")
    })
}

function calculateDelaySeconds(t) {
    return Number.parseFloat(t * .05 + .2).toFixed(2)
}

function buildMenu() {
    localStorage.getItem("menu-items") ? (linkMenu = JSON.parse(localStorage.getItem("menu-items")), console.log("Loaded menu items from localStorage")) : (linkMenu = defaultLinkMenu, localStorage.setItem("menu-items", JSON.stringify(defaultLinkMenu)), console.log("Menu items not set in localStorage. Loaded default and set."));
    let t = "";
    for (let e = 0, s = linkMenuOrder.length; e < s; e++) {
        let s = linkMenuOrder[e],
            o = linkMenu[s];
        for (let e = 0, i = o.length; e < i; e++) "-HEAD-" === o[e][2] ? (t += "<li class=\"button-container expanding-down\"><div class=\"button accent-" + ("" === o[e][1] ? "white" : o[e][1].toLowerCase()) + "\"><label class=\"button-content\">" + o[e][0] + "</label><div class=\"button-expanded-content\" style=\"box-sizing: border-box;\">", t += "<ul id=\"" + s + "MenuContainer\" class=\"menu-link container\">") : "" === o[e][2] ? t += "<li class='menu-link-item' data-index=\"" + e + "\"><div class=\"remove-menu-item\">x</div> <div class=\"drag-handle\"> :: </div><a  class=\"tooltip\"href=\"" + o[e][1] + "\" target=\"_blank\"><label class=\"text12\">" + o[e][0] + "</label><span class=\"tooltipwrap\"><span class=\"tooltiptexthidden\">" + o[e][2] + "</span></span></a></li>" : t += "<li class='menu-link-item' data-index=\"" + e + "\"><div class=\"remove-menu-item\">x</div> <div class=\"drag-handle\"> :: </div><a  class=\"tooltip\"href=\"" + o[e][1] + "\" target=\"_blank\"><label class=\"text12\">" + o[e][0] + "</label><span class=\"tooltipwrap\"><span class=\"tooltiptext\">" + o[e][2] + "</span></span></a></li>", e == i - 1 && (t += "</ul></div></div></li>")
    }
    rootMenuUL.innerHTML = t;
    let e = document.querySelectorAll(".remove-menu-item");
    Array.from(e).forEach(function(t) {
        t.addEventListener("click", confirmRemove)
    });
    let s = document.querySelectorAll("ul.menu-link.container");
    Array.from(s).forEach(function(t) {
        Sortable.create(t, {
            handle: ".drag-handle",
            onEnd: function() {
                let e = t.id.replace("MenuContainer", ""),
                    s = [];
                s[0] = linkMenu[e][0];
                let o = t.querySelectorAll("li.menu-link-item");
                Array.from(o).forEach(function(t, e) {
                    t.setAttribute("data-index", e + 1);
                    let o = t.querySelector("a").getAttribute("href"),
                        i = t.querySelector("a label").textContent;
                    s.push([i, o, ""])
                }), linkMenu[e] = s, localStorage.setItem("menu-items", JSON.stringify(linkMenu))
            }
        })
    });
    let o = document.querySelectorAll(".menu-link");
    Array.from(o).forEach(function(t) {
        new PerfectScrollbar(t)
    })
}

function randomLink() {
    let t = linkMenuOrder.length,
        e = Math.round(Math.random() * t),
        s = linkMenuOrder[e],
        o = linkMenu[s];
    max_2 = o.length;
    let i = Math.round(Math.random() * max_2),
        r = o[i][1];
    window.open(r)
}
document.getElementById("add").addEventListener("click", function() {
    setTimeout(function() {
        buildMenu()
    }, 500)
}), document.getElementById("random-link").addEventListener("click", function() {
    setTimeout(function() {
        randomLink()
    }, 50)
});

function addLinkToMenu(t, e, s) {
    let o = linkMenu[s].push([e, t, ""]) - 1;
    localStorage.setItem("menu-items", JSON.stringify(linkMenu));
    let i = document.createElement("li");
    i.setAttribute("class", "menu-link-item"), i.setAttribute("data-index", o), i.innerHTML = "<div class=\"remove-menu-item\">x</div><div class=\"drag-handle\"> :: </div><a href=\"" + t + "\" target=\"_blank\"><label>" + e + "</label></a>", document.getElementById(s + "MenuContainer").appendChild(i).addEventListener("click", confirmRemove), buildMenu()
}

function confirmRemove() {
    let t = this.parentNode,
        e = this.parentNode.querySelector("label").innerHTML;
    confirmModal.style.display = "block", overlay.style.display = "block", document.getElementById("modal-label").innerHTML = e, document.getElementById("deleteLink").addEventListener("click", function() {
        removeLinkFromMenu(t), confirmModal.style.display = "none", overlay.style.display = "none"
    }, {
        once: !0
    })
}

function removeLinkFromMenu(t) {
    let e = t.getAttribute("data-index"),
        s = t.parentNode,
        o = s.getAttribute("id"),
        i = o.replace("MenuContainer", ""),
        r = linkMenu[i];
    r.splice(e, 1), localStorage.setItem("menu-items", JSON.stringify(linkMenu)), t.remove();
    let a = s.querySelectorAll(".menu-link-item");
    Array.from(a).forEach(function(t) {
        t.setAttribute("data-index", e + 1)
    })
}

function openSecretMenuOne() {
    let t = document.createElement("ul");
    t.innerHTML += "<p class='menuTitle'>&nbsp;Private Sites</p>";
    for (let e = 0; e < hiddenLinksOne.length; e++) t.innerHTML += "<li class=' secret-link'><a href=\"" + hiddenLinksOne[e][1] + "\" target='_blank'><label id='secret-link-label'>" + hiddenLinksOne[e][0] + "</label></a></li>";
    document.getElementById("secretMenu").appendChild(t), secretMenuOne.style.display = "block", overlay.style.display = "block", document.addEventListener("click", secretMenuClose)
}

function openSecretMenuTwo() {
    let t = document.createElement("ul");
    t.innerHTML += "<p class='menuTitle'>&nbsp;Porn Sites</p>";
    for (let e = 0; e < hiddenLinksTwo.length; e++) t.innerHTML += "<li class=' secret-link'><a href=\"" + hiddenLinksTwo[e][1] + "\" target='_blank'><label id='secret-link-label'>" + hiddenLinksTwo[e][0] + "</label></a></li>";
    document.getElementById("secretMenu").appendChild(t), secretMenuTwo.style.display = "block", overlay.style.display = "block", document.addEventListener("click", secretMenuClose)
}

function hideSecretMenu() {
    secretMenu.style.display = "none", overlay.style.display = "none";
    let t = document.getElementById("secretMenu");
    t.innerHTML = "", document.removeEventListener("click", secretMenuClose)
}

function secretMenuClose(t) {
    if (console.log(t.target.className + t.target.id), "secretMenu" !== t.target.id && "menuTitle" !== t.target.className) {
        secretMenu.style.display = "none", overlay.style.display = "none";
        let t = document.getElementById("secretMenu");
        t.innerHTML = "", document.removeEventListener("click", secretMenuClose)
    }
    t.stopPropagation()
}

function handleQuery(t, e) {
    let s = t.keyCode || t.which;
    if ("" !== e) {
        let o, r;
        if (32 === s) {
            if (r = e.split(" "), r[0].charAt(0) === cmdPrefix) {
                let s = "";
                for (let o = 0; o < searchSources.length; o++)
                    if (s = cmdPrefix + searchSources[o][0], s === r[0]) {
                        ssi = o, searchInput.placeholder = searchSources[ssi][2], searchInput.value = e.replace(s, "").trim(), searchsave = ssi, SetCookie("engine", searchsave, 31536000000), t.preventDefault();
                        break
                    }
            }
        } else if (13 === s)
            if (r = e.split(" "), r[0].charAt(0) === cmdPrefix) {
                let t = "";
                for (let e = 0; e < searchSources.length; e++)
                    if (t = cmdPrefix + searchSources[e][0], t === r[0]) {
                        ssi = e;
                        break
                    } 1 < r.length ? (o = searchSources[ssi][1].replace("{Q}", encodeURIComponent(e.replace(t, ""))).trim(), "true" === GetCookie("new-tab") ? window.open(o, "_blank") : window.location = o) : (searchInput.placeholder = searchSources[ssi][2], searchInput.value = "")
            } else o = searchSources[ssi][1].replace("{Q}", encodeURIComponent(e)), "true" === GetCookie("new-tab") ? window.open(o, "_blank") : window.location = o
    }
    27 === s && searchInput.blur(), 40 !== s && 38 !== s && 39 !== s && fetchAutoComp(searchInput.value)
}

function handleNoteInput(t) {
    let e = t.keyCode || t.which;
    27 === e && notesTextarea.blur()
}
let noteText = null;

function handleNotes(t, e) {
    e ? (!noteText && (noteText = GetCookie("notes") || ""), notesTextarea.value = noteText, addClass("notesContainer", "active")) : (removeClass("notesContainer", "active"), noteText !== notesTextarea.value && (noteText = notesTextarea.value, SetCookie("notes", noteText, 31536000000)))
}
let ignoredKeys = [9, 13, 16, 17, 18, 19, 20, 27, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 91, 92, 93, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 144, 145],
    map = [];

function handleKeydown(t) {
    if (map[t.keyCode] = "keydown" === t.type, map[16] && map[33]) return void("block" == secretMenu.style.display ? hideSecretMenu() : openSecretMenuOne());
    if (map[16] && map[46]) return void("block" == secretMenu.style.display ? hideSecretMenu() : openSecretMenuTwo());
    if (!(notesInput === document.activeElement || searchInput === document.activeElement || searchLinksInput === document.activeElement || ignoredKeys.includes(t.keyCode))) {
        let t = "0px" !== window.getComputedStyle(document.getElementById("custom_links_nav")).width;
        if (!t) searchInput.focus();
        else {
            let t = document.getElementById("add-link-form").classList.contains("active");
            t ? !document.querySelector("#add-link-form > #title").value && document.querySelector("#add-link-form > #title").focus() : document.querySelector("#new-link-button > #add-link-btn").click()
        }
    }
}

function addClass(t, e) {
    document.getElementById(t).classList.add(e)
}

function removeClass(t, e) {
    document.getElementById(t).classList.remove(e)
}

function GetCookie(t) {
    try {
        let e = document.cookie;
        t = CookiePrefix + t;
        let s = e.indexOf(t + "=") + 1;
        if (0 === s) return null;
        s += t.length;
        let o = e.indexOf(";", s);
        return -1 == o && (o = e.length), decodeURIComponent(e.substring(s, o))
    } catch (t) {
        console.log(t)
    }
    return null
}

function SetCookie(t, e, s) {
    let o = CookiePrefix + t + "=" + escape(e) + ";" + (0 === s ? " path=/;" : "expires=" + new Date(new Date().getTime() + s).toUTCString() + ";sameSite=strict");
    document.cookie = o
}

function CanSetCookies() {
    SetCookie("CookieTest", "true", 0);
    let t = null !== GetCookie("CookieTest");
    return DelCookie("CookieTest"), t
}

function DelCookie(t) {
    document.cookie = CookiePrefix + t + "=0; path=/; expires=Thu, 01 Jan 1970 00:00:01 GMT;sameSite=strict"
}
let switcheroo = function(t) {
    handleKeydown(t)
};

function openNav() {
    document.getElementById("mySidenav").style.width = "200px", document.getElementById("leftsidemenu").style.marginLeft = "200px", document.getElementById("leftsidemenu").style.opacity = "0", document.getElementById("leftsidemenu").style.transition = "0.5s", document.removeEventListener("keydown", switcheroo), document.removeEventListener("keyup", switcheroo)
}

function closeNav() {
    lockNav || (document.getElementById("mySidenav").style.width = "0", document.getElementById("leftsidemenu").style.marginLeft = "0", document.getElementById("leftsidemenu").style.opacity = "1")
}

function toggleShowIP() {
    "Show IP" == document.getElementById("ip").innerHTML ? getIPData() : document.getElementById("ip").innerHTML = "Show IP"
}

function getIPData() {
    let t = new XMLHttpRequest;
    t.open("GET", "https://icanhazip.com", !0), t.onload = function() {
        if (200 <= t.status && 400 > t.status) {
            let e = t.responseText;
            document.getElementById("ip").innerHTML = "<a href=\"https://ipleak.net/\"  target=\"_blank\"> " + e + "</a>"
        } else;
    }, t.onerror = function() {}, t.send()
}

function toggleHideIcons() {
    let t = rootMenuUL;
    showHideItemIcons.checked ? (t.classList.add("hide-icons"), localStorage.setItem("hide-icons", "yes")) : (t.classList.remove("hide-icons"), localStorage.setItem("hide-icons", "no"))
}

function toggleOpenNewTab() {
    openInNewTab.checked ? SetCookie("new-tab", !0, 31536000000) : SetCookie("new-tab", !1, 31536000000)
}

function toggleOldReddit() {
    let t, e = document.querySelectorAll("#RedditMenuContainer li");
    oldRedditLinks.checked ? (t = /(?:www)/, Array.from(e).forEach(function(e) {
        e.lastChild.href = e.lastChild.href.replace(t, "old")
    }), localStorage.setItem("old-reddit", "yes")) : (t = /(?:old)/, Array.from(e).forEach(function(e) {
        e.lastChild.href = e.lastChild.href.replace(t, "www")
    }), localStorage.setItem("old-reddit", "no"))
}

function toogleSearchSuggestions() {
    searchSuggestions.checked ? localStorage.setItem("search-suggestions", "yes") : localStorage.setItem("search-suggestions", "no"), buildHelp()
}

function updateMatrixColor(t) {
    color = "#" + t, SetCookie("matrix-color", color, 31536000000), document.getElementById("colorPicker").jscolor.fromString(color)
}

function togglePicker() {
    let t = document.getElementById("colorPicker");
    t.classList.toggle("active"), document.getElementById("pickerContainer").classList.toggle("active"), document.getElementById("resetColor").classList.toggle("active"), t.classList.contains("active") ? t.jscolor.show() : t.jscolor.hide()
}

function toggleSettings() {
    document.getElementById("toggleSettings").classList.toggle("active"), document.getElementById("settingsContainer").classList.toggle("active")
}
let settingsFile = null;

function exportUserSettings(t) {
    let e = new Blob([JSON.stringify(t, null, 2)], {
        type: "application/json"
    });
    return null !== e && window.URL.revokeObjectURL(e), e = window.URL.createObjectURL(e), console.log(e), e
}
document.getElementById("exportSettings").addEventListener("click", function() {
    userSettings = {
        hideIcons: localStorage.getItem("hide-icons") ? localStorage.getItem("hide-icons") : "yes",
        newTab: !!GetCookie("new-tab") && GetCookie("new-tab"),
        oldRedditOff: localStorage.getItem("old-reddit") ? localStorage.getItem("old-reddit") : "yes",
        searchSuggestionFeature: localStorage.getItem("search-suggestions") ? localStorage.getItem("search-suggestions") : "yes",
        matrixColor: color,
        animation: GetCookie("animation") ? GetCookie("animation") : canvasBg,
        searchEngine: GetCookie("engine"),
        backgroundImg: url_str.match(/[0-9]/),
        notes: GetCookie("notes"),
        links: localStorage.getItem("menu-items")
    };
    let t = document.createElement("a");
    t.setAttribute("download", "Deafalt-settings.json"), t.href = exportUserSettings(userSettings), console.log(t.href), document.body.appendChild(t), window.requestAnimationFrame(function() {
        let e = new MouseEvent("click");
        t.dispatchEvent(e), document.body.removeChild(t)
    })
}, !1);

function updateSettings(t) {
    localStorage.setItem("hide-icons", t.hideIcons), localStorage.setItem("old-reddit", t.oldRedditOff), localStorage.setItem("search-suggestions", t.searchSuggestionFeature), localStorage.setItem("menu-items", t.links), "true" === t.newTab ? (SetCookie("new-tab", !0, 31536000000), openInNewTab.checked = !0) : SetCookie("new-tab", !1, 31536000000), SetCookie("matrix-color", t.matrixColor, 31536000000), SetCookie("animation", t.animation, 31536000000), t.searchEngine && SetCookie("engine", t.searchEngine, 31536000000), t.notes && SetCookie("notes", t.notes, 31536000000), t.backgroundImg && localStorage.setItem("background_id", t.backgroundImg[0])
}

function importSettings() {
    let t = new FileReader,
        e = document.getElementById("importSettings"),
        s = e.value;
    if (!/(\.json)$/i.exec(s)) return alert("Please upload only the exported .json file"), void(e.value = "");
    t.onload = function() {
        let e = t.result;
        try {
            userSettings = JSON.parse(e), updateSettings(userSettings), setTimeout(function() {
                window.location.reload()
            }, 300)
        } catch (t) {
            alert("Invalid file!"), console.log(t)
        }
    };
    t.readAsText(e.files[0])
}

function toggleAnimations() {
    document.getElementById("customAnimationsBtn").classList.toggle("active"), document.getElementById("customAnimationsList").classList.toggle("active"), document.getElementById("matrix").classList.toggle("active")
}
let head = document.getElementsByTagName("head")[0],
    animationsBtnList = document.querySelectorAll(".animationBtn");
Array.from(animationsBtnList).forEach(function(t) {
    t.addEventListener("click", function() {
        canvasBg === t.id || (canvasBg = t.id, clearOldCanvas(), globalResetBackground(), setAnimation(t.id), SetCookie("animation", t.id, 31536000000), window.location.reload(!0))
    })
});

function clearOldCanvas() {
    let t = document.getElementsByTagName("script");
    for (let e = 0; e < t.length; e++) - 1 != t[e].src.search("canvas") && head.removeChild(t[e]);
    for (let t = document.getElementById("canvasContainer"); t.firstChild;) contex = t.firstChild.getContext("2d"), contex.save(), contex.setTransform(1, 0, 0, 1, 0, 0), contex.clearRect(0, 0, t.firstChild.width, t.firstChild.height), contex.restore(), t.removeChild(t.firstChild)
}

function setAnimation(t) {
    let e = document.createElement("script");
    e.type = "text/javascript", e.src = "js/canvas/" + t + ".js", head.appendChild(e)
}

function resetAllToDefault() {
    localStorage.setItem("menu-items", JSON.stringify(defaultLinkMenu)), buildMenu(), globalResetBackground(), DelCookie("engine"), DelCookie("notes"), DelCookie("new-tab"), DelCookie("animation"), DelCookie("matrix-color"), notesTextarea.value = "", noteText = "", color = "#0C85D3", localStorage.setItem("hide-icons", "yes"), localStorage.setItem("old-reddit", "yes"), localStorage.setItem("search-suggestions", "yes"), openInNewTab.checked && openInNewTab.click(), setTimeout(function() {
        window.location.reload()
    }, 100)
}
var isDefaultSearch = !0;

function switchSearch() {
    const t = document.getElementById("searchBar"),
        e = document.getElementById("searchLinks"),
        s = document.getElementById("menuContainer");
    return isDefaultSearch ? (t.value = "", t.style.display = "none", e.style.display = "block", s.style.marginTop = "3.1em", void(isDefaultSearch = !1)) : isDefaultSearch ? void 0 : (searchLinks.value = "", t.style.display = "block", e.style.display = "none", s.style.marginTop = "0px", void(isDefaultSearch = !0))
}
const style = "background: #0280cf;color: #fff;padding: 10px 20px;line-height: 35px";
console.log("%c WebOas.is", "background: #0280cf;color: #fff;padding: 10px 20px;line-height: 35px");